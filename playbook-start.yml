#start ec2 instance

- name: Start sandbox instances
  hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Launch instance
      ec2:
         key_name: "{{ key_name }}"
         group: "{{ security_group }}"
         instance_type: "{{ instance_type }}"
         image: "{{ image }}"
         wait: true
         region: "{{ region }}"
         exact_count: 1
         count_tag:
            Name: Test-Selenoid
         instance_tags:
            Name: Test-Selenoid
            Suite: "{{ test_suite }}"
      register: ec2

    - name: Add new instance to host group
      add_host:
        hostname: "{{ item.public_ip }}" 
        groupname: launched
      with_items: "{{ ec2.instances }}"
    
    - name: Save instance address 
      local_action:
        module: lineinfile
        dest: ./hosts
        line: "{{ item.public_dns_name | default(' ') }}"
        create: yes
      with_items: "{{ ec2.instances }}"

    - name: Wait for SSH to come up
      wait_for:
        host: "{{ item.public_dns_name }}"
        port: 22
        delay: 5
        timeout: 320
        state: started
      with_items: "{{ ec2.instances }}"
      
- name: Configure instance(s) 1
  hosts: all
  remote_user: ubuntu
  become: True
  gather_facts: False
  pre_tasks:
    - name: Install python
      raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)
  tasks:
    - name: Install docker
      apt:
        name: "{{ item }}"
        update_cache: yes
      with_items:
        - docker.io

- name: Configure instance(s) 2
  hosts: all
  remote_user: ubuntu
  become: True
  gather_facts: False
  roles:
    - selenoid
